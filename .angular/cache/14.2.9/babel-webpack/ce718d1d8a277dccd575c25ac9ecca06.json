{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/angel/personafront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./services/persona/persona.service\";\nimport * as i3 from \"@angular/router\";\nexport class AppComponent {\n  constructor(fb, personaService) {\n    this.fb = fb;\n    this.personaService = personaService;\n    this.show = true;\n    this.value = \"\";\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.personaForm = _this.fb.group({\n        id: [''],\n        nombre: ['', Validators.required],\n        apellido: ['', Validators.required],\n        genero: ['', Validators.required]\n      });\n      ;\n\n      _this.personaService.getAllPersonas().subscribe(resp => {\n        console.log(resp);\n      }, error => {\n        console.error(error);\n      });\n    })();\n  }\n\n  deletModal(persona) {\n    Swal.fire({\n      title: '¿ELIMINAR?',\n      text: \"¿Está seguro de que desea eliminar a esta persona?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: 'Cancelar',\n      confirmButtonText: 'Eliminar'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.eliminar(persona);\n        Swal.fire('Eliminado!', 'Se ha eliminado satisfactoriamente.', 'success');\n      }\n    });\n  }\n\n  confirmModal() {\n    Swal.fire({\n      title: '¿GUARDAR?',\n      text: \"¿Está seguro de que desea guardar?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: 'Cancelar',\n      confirmButtonText: 'Guardar'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.guardar();\n        Swal.fire('Guardado!', 'Se ha guardado satisfactoriamente.', 'success');\n      }\n    });\n  }\n\n  mostrar() {\n    this.personaService.getAllPersonas().subscribe(resp => {\n      this.personas = resp;\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  guardar() {\n    this.personaService.savePersona(this.personaForm.value).subscribe(resp => {\n      this.personaForm.reset();\n      this.personas = this.personas.filter(persona => resp.id !== persona.id);\n      this.personas.push(resp);\n      this.mostrar();\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  eliminar(persona) {\n    this.personaService.deletePersona(persona.id).subscribe(resp => {\n      this.mostrar();\n\n      if (resp === true) {\n        this.personas.pop();\n      }\n    });\n  }\n\n  editar(persona) {\n    this.personaForm.setValue({\n      id: persona.id,\n      nombre: persona.nombre,\n      apellido: persona.apellido,\n      genero: persona.genero\n    });\n  }\n\n  agregar() {\n    this.personaForm.reset();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PersonaService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 1,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"router-outlet\");\n    }\n  },\n  dependencies: [i3.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Swal","AppComponent","constructor","fb","personaService","ngOnInit","personaForm","group","id","nombre","required","apellido","genero","getAllPersonas","subscribe","resp","console","log","error","deletModal","persona","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","eliminar","confirmModal","guardar","mostrar","personas","savePersona","value","reset","filter","push","deletePersona","pop","editar","setValue","agregar","i0","selectors","decls","vars","template"],"sourceRoot":"","sources":["C:\\Users\\angel\\personafront\\src\\app\\app.component.ts","C:\\Users\\angel\\personafront\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ObjectUnsubscribedError, Subject } from 'rxjs';\nimport { PersonaService } from './services/persona/persona.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  personaForm: FormGroup;\n  personas: any;\n  show= true;\n  filterPost:string;\n  filterApellido:string;\n  filterGenero:string;\n  value: string=\"\";\n\n\n  constructor(\n    public fb: FormBuilder,\n    public personaService: PersonaService\n  ) {\n\n  }\n\n  public async ngOnInit() {\n\n    this.personaForm = this.fb.group({\n      id: [''],\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      genero: ['', Validators.required],\n    });;\n    this.personaService.getAllPersonas().subscribe(resp => {\n      console.log(resp)\n    },\n      error => { console.error(error) }\n    );\n  }\n  \n  deletModal(persona) {\n    Swal.fire({\n      title: '¿ELIMINAR?',\n      text: \"¿Está seguro de que desea eliminar a esta persona?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: 'Cancelar',\n      confirmButtonText: 'Eliminar'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        \n        this.eliminar(persona);\n        Swal.fire(\n          \n          'Eliminado!',\n          'Se ha eliminado satisfactoriamente.',\n          'success'\n        )\n        \n      }\n    })\n  }\n\n  confirmModal() {\n    Swal.fire({\n      title: '¿GUARDAR?',\n      text: \"¿Está seguro de que desea guardar?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: 'Cancelar',\n      confirmButtonText: 'Guardar'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.guardar();\n        Swal.fire(\n          'Guardado!',\n          'Se ha guardado satisfactoriamente.',\n          'success'\n        )\n        \n      }\n    })\n  }\n\n  mostrar() {\n    this.personaService.getAllPersonas().subscribe(resp => {\n      this.personas = resp;\n    },\n      error => { console.error(error) }\n    );\n  }\n\n  \n\n  guardar(): void {\n    this.personaService.savePersona(this.personaForm.value).subscribe(resp => {\n      this.personaForm.reset();\n      this.personas = this.personas.filter(persona => resp.id !== persona.id);\n      this.personas.push(resp);\n      this.mostrar();\n    },\n\n      error => { console.error(error) }\n\n    )\n  }\n  eliminar(persona) {\n    this.personaService.deletePersona(persona.id).subscribe(resp => {\n      this.mostrar();\n      if (resp === true) {\n        this.personas.pop()\n      }\n    })\n  }\n  editar(persona) {\n    this.personaForm.setValue({\n      id: persona.id,\n      nombre: persona.nombre,\n      apellido: persona.apellido,\n      genero: persona.genero,\n    })\n  }\n  agregar(){\n    this.personaForm.reset();\n  }\n\n}\n","\r\n<router-outlet></router-outlet>"]},"metadata":{},"sourceType":"module"}